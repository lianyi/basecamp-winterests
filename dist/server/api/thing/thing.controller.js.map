{"version":3,"sources":["api/thing/thing.controller.js"],"names":["index","show","create","upsert","patch","destroy","upsertVisitor","respondWithResult","res","statusCode","entity","status","json","patchUpdates","patches","apply","err","reject","save","removeEntity","remove","then","end","handleEntityNotFound","handleError","send","req","find","exec","catch","findById","params","id","body","_id","findOneAndUpdate","setDefaultsOnInsert","runValidators","Bar","findOne","yelpId","bar","visitors","user_id","visitorsCount","idx","_","indexOf","splice","push","length","console","info"],"mappings":"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","file":"thing.controller.js","sourcesContent":["/**\r\n * Using Rails-like standard naming convention for endpoints.\r\n * GET     /api/things              ->  index\r\n * POST    /api/things              ->  create\r\n * GET     /api/things/:id          ->  show\r\n * PUT     /api/things/:id          ->  upsert\r\n * PATCH   /api/things/:id          ->  patch\r\n * DELETE  /api/things/:id          ->  destroy\r\n */\r\n\r\n'use strict';\r\n\r\nimport jsonpatch from 'fast-json-patch';\r\nimport Thing from './thing.model';\r\n\r\nfunction respondWithResult(res, statusCode) {\r\n  statusCode = statusCode || 200;\r\n  return function(entity) {\r\n    if(entity) {\r\n      return res.status(statusCode).json(entity);\r\n    }\r\n    return null;\r\n  };\r\n}\r\n\r\nfunction patchUpdates(patches) {\r\n  return function(entity) {\r\n    try {\r\n      jsonpatch.apply(entity, patches, /*validate*/ true);\r\n    } catch(err) {\r\n      return Promise.reject(err);\r\n    }\r\n\r\n    return entity.save();\r\n  };\r\n}\r\n\r\nfunction removeEntity(res) {\r\n  return function(entity) {\r\n    if(entity) {\r\n      return entity.remove()\r\n        .then(() => {\r\n          res.status(204).end();\r\n        });\r\n    }\r\n  };\r\n}\r\n\r\nfunction handleEntityNotFound(res) {\r\n  return function(entity) {\r\n    if(!entity) {\r\n      res.status(404).end();\r\n      return null;\r\n    }\r\n    return entity;\r\n  };\r\n}\r\n\r\nfunction handleError(res, statusCode) {\r\n  statusCode = statusCode || 500;\r\n  return function(err) {\r\n    res.status(statusCode).send(err);\r\n  };\r\n}\r\n\r\n// Gets a list of Things\r\nexport function index(req, res) {\r\n  return Thing.find().exec()\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Gets a single Thing from the DB\r\nexport function show(req, res) {\r\n  return Thing.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Creates a new Thing in the DB\r\nexport function create(req, res) {\r\n  return Thing.create(req.body)\r\n    .then(respondWithResult(res, 201))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Upserts the given Thing in the DB at the specified ID\r\nexport function upsert(req, res) {\r\n  if(req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Thing.findOneAndUpdate({_id: req.params.id}, req.body, {upsert: true, setDefaultsOnInsert: true, runValidators: true}).exec()\r\n\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Updates an existing Thing in the DB\r\nexport function patch(req, res) {\r\n  if(req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  return Thing.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(patchUpdates(req.body))\r\n    .then(respondWithResult(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n// Deletes a Thing from the DB\r\nexport function destroy(req, res) {\r\n  return Thing.findById(req.params.id).exec()\r\n    .then(handleEntityNotFound(res))\r\n    .then(removeEntity(res))\r\n    .catch(handleError(res));\r\n}\r\n\r\n\r\n\r\nexport function upsertVisitor(req, res) {\r\n  if (req.body._id) {\r\n    delete req.body._id;\r\n  }\r\n  Bar.findOne({yelpId: req.params.id}).exec().then(\r\n    function (bar) {\r\n      if (!bar) {//make a new one\r\n        return Bar.create({\r\n          yelpId: req.params.id,\r\n          visitors: [req.params.user_id],\r\n          visitorsCount: 1\r\n        }).then(respondWithResult(res, 201)).catch(handleError(res));\r\n      } else {//update existing one\r\n\r\n        const idx = _.indexOf(bar.visitors, req.params.user_id);\r\n        if (idx >= 0) {\r\n          bar.visitors.splice(idx, 1);\r\n        } else {\r\n          bar.visitors.push(req.params.user_id);\r\n        }\r\n        bar.visitorsCount = bar.visitors.length;\r\n        console.info(bar);\r\n        return Bar.findOneAndUpdate({_id: bar._id}, bar, {\r\n          upsert: true,\r\n          setDefaultsOnInsert: true,\r\n          runValidators: true\r\n        }).exec()\r\n          .then(respondWithResult(res))\r\n          .catch(handleError(res));\r\n      }\r\n    }).catch(handleError(res));\r\n\r\n}\r\n"]}